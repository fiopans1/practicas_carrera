from pyomo.environ import *
if __name__ == '__main__':
    model=ConcreteModel()
    model.A=Var(domain=NonNegativeIntegers)
    model.B = Var(domain=NonNegativeIntegers)
    model.C = Var(domain=NonNegativeIntegers)
    model.D = Var(domain=NonNegativeIntegers)
    model.E = Var(domain=NonNegativeIntegers)
    model.F = Var(domain=NonNegativeIntegers)
    model.G = Var(domain=NonNegativeIntegers)
    model.H = Var(domain=NonNegativeIntegers)
    model.I = Var(domain=NonNegativeIntegers)
    model.J = Var(domain=NonNegativeIntegers)
    model.profit = Objective(expr=model.A+model.B+model.C+model.D+model.E+model.F+model.G+model.H+model.I+model.J, sense=minimize)
    model.r1=Constraint(expr=model.A+model.B+model.C+model.D+model.E==model.F+model.G+model.H+model.I+model.J)
    model.r2=Constraint(expr=model.D+model.G+model.H+model.I>=model.E+model.F)
    model.r3=Constraint(expr=model.A+model.B+model.C+model.D+model.E>=1)
    model.r4 = Constraint(expr=model.F + model.G + model.H + model.I + model.J >= 1)
    model.r5 = Constraint(expr=model.A + model.B + model.C + model.J>= 1)
    model.r6=Constraint(expr=model.E+model.F>=1)
    model.r7=Constraint(expr=model.D+model.G+model.H+model.I>=1)
    results = SolverFactory('glpk').solve(model)
    results.write()
    if results.solver.status == 'ok':
        model.pprint()
    print('Beneficio=', model.profit())
    print('A=', model.A())
    print('B=', model.B())
    print('C=', model.C())
    print('D=', model.D())
    print('E=', model.E())
    print('F=', model.F())
    print('G=', model.G())
    print('H=', model.H())
    print('I=', model.I())
    print('J=', model.J())  